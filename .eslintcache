[{"C:\\Users\\TCCEROGLU\\Desktop\\Udacity\\PROJECT\\udacity-first-project\\src\\index.tsx":"1","C:\\Users\\TCCEROGLU\\Desktop\\Udacity\\PROJECT\\udacity-first-project\\src\\reportWebVitals.ts":"2","C:\\Users\\TCCEROGLU\\Desktop\\Udacity\\PROJECT\\udacity-first-project\\src\\App.tsx":"3","C:\\Users\\TCCEROGLU\\Desktop\\Udacity\\PROJECT\\udacity-first-project\\src\\screens\\homepage.tsx":"4","C:\\Users\\TCCEROGLU\\Desktop\\Udacity\\PROJECT\\udacity-first-project\\src\\BooksAPI.js":"5","C:\\Users\\TCCEROGLU\\Desktop\\Udacity\\PROJECT\\udacity-first-project\\src\\screens\\searchpage.tsx":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":479,"mtime":1609949988269,"results":"10","hashOfConfig":"8"},{"size":8408,"mtime":1609950379223,"results":"11","hashOfConfig":"8"},{"size":1132,"mtime":1609942680584,"results":"12","hashOfConfig":"8"},{"size":3876,"mtime":1609953392092,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1gib9j3",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\TCCEROGLU\\Desktop\\Udacity\\PROJECT\\udacity-first-project\\src\\index.tsx",[],["30","31"],"C:\\Users\\TCCEROGLU\\Desktop\\Udacity\\PROJECT\\udacity-first-project\\src\\reportWebVitals.ts",[],"C:\\Users\\TCCEROGLU\\Desktop\\Udacity\\PROJECT\\udacity-first-project\\src\\App.tsx",["32","33"],"import React, {useState} from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\t\nimport home from './screens/homepage'\nimport search from './screens/searchpage'\nconst Project = () => {\n  \n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/\" exact component={home} />\n                <Route path=\"/search\" exact component={search} />\n            </Switch>\n        </Router>\n    );\n}\nexport default Project;","C:\\Users\\TCCEROGLU\\Desktop\\Udacity\\PROJECT\\udacity-first-project\\src\\screens\\homepage.tsx",["34"],"import React, { useState, useEffect } from \"react\";\r\nimport * as BooksAPI from '../BooksAPI'\r\nimport '../App.css'\r\nimport { updateObjectBindingPattern } from \"typescript\";\r\n\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst HomePage = () => {\r\n    const history = useHistory();\r\n    const [bookdata, setbookdata] = useState([]);\r\n    useEffect(() => {\r\n        BooksAPI.getAll().then((data) => {\r\n            setbookdata(data)\r\n        })\r\n    }, [])\r\n    const updatebookdata=()=>{\r\n        BooksAPI.getAll().then((data) => {\r\n            setbookdata(data)\r\n        })\r\n    }\r\n    return (\r\n\r\n        <div className=\"list-books\">\r\n            <div className=\"list-books-title\">\r\n                <h1>MyReads</h1>\r\n            </div>\r\n            <div className=\"list-books-content\">\r\n                <div>\r\n                    <div className=\"bookshelf\">\r\n                        <h2 className=\"bookshelf-title\">Currently Reading</h2>\r\n                        <div className=\"bookshelf-books\">\r\n                            <ol className=\"books-grid\">\r\n                                {bookdata.filter((item: any) => item.shelf === 'currentlyReading').map((item: any) => {\r\n\r\n                                    return <li>\r\n\r\n                                        <div className=\"book\">\r\n                                            <div className=\"book-top\">\r\n                                                <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: 'url(' + item.imageLinks.thumbnail + ')' }}></div>\r\n                                                <div className=\"book-shelf-changer\">\r\n                                                    <select onChange={(event:any)=>{\r\n                                                        BooksAPI.update(item, event.target.value).then(()=>{\r\n                                                            updatebookdata()\r\n                                                        })\r\n                                                    }}>\r\n                                                        <option value=\"move\" disabled>Move to...</option>\r\n                                                        <option value=\"currentlyReading\">Currently Reading</option>\r\n                                                        <option value=\"wantToRead\">Want to Read</option>\r\n                                                        <option value=\"read\">Read</option>\r\n                                                        <option value=\"none\">None</option>\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"book-title\">{item.title}</div>\r\n                                            <div className=\"book-authors\">{item.authors.map((item: any) => {\r\n                                                return item + ','\r\n                                            })}</div>\r\n                                        </div>\r\n                                    </li>\r\n                                })}\r\n                            </ol>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"bookshelf\">\r\n                        <h2 className=\"bookshelf-title\">Want to Read</h2>\r\n                        <div className=\"bookshelf-books\">\r\n                            <ol className=\"books-grid\">\r\n                                {bookdata.filter((item: any) => item.shelf === 'wantToRead').map((item: any) => {\r\n\r\n                                    return <li>\r\n\r\n                                        <div className=\"book\">\r\n                                            <div className=\"book-top\">\r\n                                                <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: 'url(' + item.imageLinks.thumbnail + ')' }}></div>\r\n                                                <div className=\"book-shelf-changer\">\r\n                                                    <select onChange={(event:any)=>{\r\n                                                        BooksAPI.update(item, event.target.value).then(()=>{\r\n                                                            updatebookdata()\r\n                                                        })\r\n                                                    }}>\r\n                                                        <option value=\"move\" disabled>Move to...</option>\r\n                                                        <option value=\"wantToRead\">Want to Read</option>\r\n                                                        <option value=\"currentlyReading\">Currently Reading</option>\r\n                                                        <option value=\"read\">Read</option>\r\n                                                        <option value=\"none\">None</option>\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"book-title\">{item.title}</div>\r\n                                            <div className=\"book-authors\">{item.authors.map((item: any) => {\r\n                                                return item + ','\r\n                                            })}</div>\r\n                                        </div>\r\n                                    </li>\r\n                                })}\r\n                            </ol>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"bookshelf\">\r\n                        <h2 className=\"bookshelf-title\">Read</h2>\r\n                        <div className=\"bookshelf-books\">\r\n                            <ol className=\"books-grid\">\r\n                                {bookdata.filter((item: any) => item.shelf === 'read').map((item: any) => {\r\n\r\n                                    return <li>\r\n\r\n                                        <div className=\"book\">\r\n                                            <div className=\"book-top\">\r\n                                                <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: 'url(' + item.imageLinks.thumbnail + ')' }}></div>\r\n                                                <div className=\"book-shelf-changer\">\r\n                                                    <select onChange={(event:any)=>{\r\n                                                        BooksAPI.update(item, event.target.value).then(()=>{\r\n                                                            updatebookdata()\r\n                                                        })\r\n                                                    }}>\r\n                                                        <option value=\"move\" disabled>Move to...</option>\r\n                                                        <option value=\"read\">Read</option>\r\n                                                        <option value=\"currentlyReading\">Currently Reading</option>\r\n                                                        <option value=\"wantToRead\">Want to Read</option>\r\n                                                        <option value=\"none\">None</option>\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"book-title\">{item.title}</div>\r\n                                            <div className=\"book-authors\">{item.authors.map((item: any) => {\r\n                                                return item + ','\r\n                                            })}</div>\r\n                                        </div>\r\n                                    </li>\r\n                                })}\r\n                            </ol>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"open-search\">\r\n              <button onClick={() => {\r\n                history.push('/search');\r\n              }\r\n              }>Add a book</button>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default HomePage;\r\n\r\n","C:\\Users\\TCCEROGLU\\Desktop\\Udacity\\PROJECT\\udacity-first-project\\src\\BooksAPI.js",[],["35","36"],"C:\\Users\\TCCEROGLU\\Desktop\\Udacity\\PROJECT\\udacity-first-project\\src\\screens\\searchpage.tsx",["37"],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":1,"column":16,"nodeType":"44","messageId":"45","endLine":1,"endColumn":24},{"ruleId":"42","severity":1,"message":"46","line":2,"column":50,"nodeType":"44","messageId":"45","endLine":2,"endColumn":58},{"ruleId":"42","severity":1,"message":"47","line":4,"column":10,"nodeType":"44","messageId":"45","endLine":4,"endColumn":36},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"47","line":4,"column":10,"nodeType":"44","messageId":"45","endLine":4,"endColumn":36},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'updateObjectBindingPattern' is defined but never used.","no-global-assign","no-unsafe-negation"]